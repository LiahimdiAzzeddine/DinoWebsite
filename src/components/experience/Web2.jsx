/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/models/Web2.glb 
*/

import React, {  useEffect, useLayoutEffect, useMemo, useRef } from 'react'
import {  useGraph } from '@react-three/fiber'
import { useGLTF, PerspectiveCamera, useAnimations, useScroll } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import { useScrollAnimation } from '../../hooks/useScrollAnimation'
import { DragControls } from '@react-three/drei';

export function Man({ currentPage, ...props }) {
  const group = useRef();
  const { scene, animations } = useGLTF('./models/Web2.glb');
  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  const { actions } = useAnimations(animations, group);
  const dragControls = useRef();
  const MGroup = useRef();

    useEffect(() => {
      if (dragControls.current) {
        dragControls.current.addEventListener('dragstart', (event) => {
          console.log("ðŸš€ ~ dragControls.current.addEventListener ~ dragstart:", event)
          
        });
        dragControls.current.addEventListener('drag', (event) => {
          console.log("ðŸš€ ~ dragControls.current.addEventListener ~ drag:", event)
        });
        dragControls.current.addEventListener('dragend', (event) => {
          console.log("ðŸš€ ~ dragControls.current.addEventListener ~ dragend:", event)
        });
      }
    }, [])
  
  useScrollAnimation({
    actions,
    animationName: 'nocamera',
    currentPage,
    pageRange: [3, 4],
    excludedAnimations: ["Sphere.001Action.001","Sphere.014Action.002"]
  });
  useLayoutEffect(()=>{
if(actions["Sphere.014Action.002"]){
  const action = actions['Sphere.014Action.002'] 
  const action2 = actions['Sphere.001Action.001'] 
      if (action) {
        action.timeScale = 0.4;
        action.play()
      }
      if (action2) {
        action2.timeScale = 0.4;
        action2.play()
      }
}
  },[])

const isActive = currentPage >=3 && currentPage<4;
  return (
    <group ref={group} {...props} dispose={null}>
    <group name="Scene">
      <group name="Scene_1" position={[0.54, -1.237, 0.094]} scale={0.218}>
        <group
          name="Empty"
          position={[0.285, 5.924, -8.176]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
        />
        <mesh
          name="Cube"
          castShadow
          receiveShadow
          geometry={nodes.Cube.geometry}
          material={materials['Material.008']}
          position={[0.112, 2.859, 0.841]}
          rotation={[-2.809, -0.026, 3.066]}
          scale={[0.962, 1, 1]}
        />
        <mesh
          name="Cube003"
          castShadow
          receiveShadow
          geometry={nodes.Cube003.geometry}
          material={materials['Material.008']}
          position={[0.049, 3.354, 0.098]}
          rotation={[3.084, 0.004, 3.062]}
        />
              <DragControls ref={dragControls} objects={[MGroup.current]}>

        <mesh
          name="Cube004"
          castShadow
          receiveShadow
          geometry={nodes.Cube004.geometry}
          material={materials['Material.008']}
          position={[0.371, 3.152, -1.086]}
          rotation={[2.843, 0.023, 3.065]}
          scale={[0.755, 0.958, 0.958]}
        />
        </DragControls>
        <mesh
          name="Cube009"
          castShadow
          receiveShadow
          geometry={nodes.Cube009.geometry}
          material={materials.Blackk}
          position={[0.027, 2.392, 0.521]}
          rotation={[-2.61, 0, -Math.PI]}
          scale={[0.021, 0.667, 0.021]}
        />
        <mesh
          name="Cube010"
          castShadow
          receiveShadow
          geometry={nodes.Cube010.geometry}
          material={materials.Blackk}
          position={[0.027, 2.489, 0.139]}
          rotation={[3.072, 0, Math.PI]}
          scale={[0.021, 0.667, 0.021]}
        />
        <mesh
          name="Cube011"
          castShadow
          receiveShadow
          geometry={nodes.Cube011.geometry}
          material={materials.Blackk}
          position={[0.027, 2.38, -0.181]}
          rotation={[2.549, 0, Math.PI]}
          scale={[0.021, 0.667, 0.021]}
        />
        <mesh
          name="Sphere014"
          castShadow
          receiveShadow
          geometry={nodes.Sphere014.geometry}
          material={nodes.Sphere014.material}
          position={[-3.668, 4.08, -2.876]}
          scale={[0.45, 0.767, 0.767]}
        />
        <mesh
          name="Plane"
          castShadow
          receiveShadow
          geometry={nodes.Plane.geometry}
          material={materials.Blackk}
          position={[0.028, 1.451, 0.306]}
          rotation={[1.54, -0.013, -1.669]}
          scale={[0.952, 0.952, 0.207]}
        />
        <mesh
          name="Sphere001"
          castShadow
          receiveShadow
          geometry={nodes.Sphere001.geometry}
          material={nodes.Sphere001.material}
          position={[-3.668, 12.438, 2.018]}
          rotation={[Math.PI, 0, Math.PI]}
          scale={[0.45, 0.767, 0.767]}
        />
         {isActive && (
        <group name="Empty001" position={[23.142, 1.682, -2.994]} scale={0.15}>
          <PerspectiveCamera
            name="Camera"
            makeDefault={isActive}
            far={1000}
            near={0.1}
            fov={16.696}
            position={[0, 0.029, 0.555]}
            rotation={[0, Math.PI / 2, 0]}
            scale={6.678}
          />
        </group>)}
        <group
          name="Armature001"
          position={[-0.091, 0.84, -0.237]}
          rotation={[0.077, 1.536, -0.317]}
          scale={0.336}>
          <group name="Retopo_Sphere001">
            <skinnedMesh
              name="mesh001"
              geometry={nodes.mesh001.geometry}
              material={materials['Material.016']}
              skeleton={nodes.mesh001.skeleton}
            />
            <skinnedMesh
              name="mesh001_1"
              geometry={nodes.mesh001_1.geometry}
              material={materials.pants}
              skeleton={nodes.mesh001_1.skeleton}
            />
            <skinnedMesh
              name="mesh001_2"
              geometry={nodes.mesh001_2.geometry}
              material={materials.skin}
              skeleton={nodes.mesh001_2.skeleton}
            />
            <group name="Empty005" position={[2.334, 2.185, 0.181]} scale={1.043} />
            <group
              name="Empty006"
              position={[-1.99, 2.358, 0.098]}
              rotation={[0.038, 0.005, 1.049]}
              scale={0.834}>
              <mesh
                name="Cube001"
                castShadow
                receiveShadow
                geometry={nodes.Cube001.geometry}
                material={materials.skin}
                position={[-0.12, -0.118, 0.312]}
                rotation={[-1.58, 0.644, 1.602]}
                scale={3.568}
              />
              <mesh
                name="Cube008"
                castShadow
                receiveShadow
                geometry={nodes.Cube008.geometry}
                material={materials.skin}
                position={[0.136, -0.126, 0.306]}
                rotation={[1.611, 1.033, -1.617]}
                scale={3.568}
              />
            </group>
          </group>
          <primitive object={nodes.Bone} />
          <primitive object={nodes.Bone007} />
          <primitive object={nodes.Bone008} />
        </group>
      </group>
    </group>
  </group>
  )
}

useGLTF.preload('./models/Web2.glb')
