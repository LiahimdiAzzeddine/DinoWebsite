/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/models/Web2.glb 
*/

import React, { useContext, useLayoutEffect, useMemo, useRef } from "react";
import { useFrame, useGraph } from "@react-three/fiber";
import { useGLTF, PerspectiveCamera, useAnimations } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";
import gsap from "gsap";
import { ScrollTrigger } from "gsap/ScrollTrigger";
import * as THREE from "three";
import { AnimationContext } from "./AnimationContext";
gsap.registerPlugin(ScrollTrigger);

export function Web3({ sectionID, isActive, ...props }) {
  const group = useRef();
  const timelineRef = useRef(null);
  const playedScroll = useRef(false);
  const playedSecondScroll = useRef(false);
  const ManRef = useRef();

  const { scene, animations } = useGLTF("./models/Web3.glb");
  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  const { actions, mixer } = useAnimations(animations, group);

  const {
    currentModel,
    setCurrentModel,
    isTransitioning,
    transitionDirection,
  } = useContext(AnimationContext);

  const firstAnimations = [
    "1.Tour",
    "1.hook",
    "1.slider",
    "3.ManAnimation",
    "Empty.005Action.001",
    "Empty.006Action",
  ];
  const scrollAnimations = [
    "2.Ladder2ndScroll",
    "4.Head2ndScroll",
    "5.Metal2ndScroll",
    "6.WaterTower2ndScroll",
    "7.Door2ndScroll",
    "9.Rocket2ndScroll",
  ];
  const secondScrollAnimations = ["Action", "8.Rocket3rdScroll"];
  let enterAnimation = actions["ActionEnter"];

  // scroll tracking
  let prevScrollTrigger = null;
  let disableOtherSections = () => {
    if (!prevScrollTrigger) {
      let currentScrollTrigger = ScrollTrigger.getById(sectionID);
      if (currentScrollTrigger && currentScrollTrigger.previous()) {
        prevScrollTrigger = currentScrollTrigger.previous();
        prevScrollTrigger.disable();
      }
    } else {
      prevScrollTrigger.disable();
    }
  };

  let enableOtherSections = ()=>{
    // use when scroll is too quick for transitions
    // this way any section t the end of the scroll could take control and disable the others
    ScrollTrigger.getAll().forEach((trigger) => {
      if (trigger.id !== sectionID) {
        trigger.enable();
      }
    })
  }

  let resetAllActions = () => {
    Object.values(actions).forEach((action) => {
      action.reset().paused = true;
    });
  };

  let playIntroAnimations = (reversed = false) => {
    enterAnimation.reset();
    enterAnimation.setLoop(THREE.LoopOnce, 1);
    enterAnimation.time = reversed ? enterAnimation.getClip().duration : 0; // jump to the end or beginning of the clip
    enterAnimation.timeScale = reversed ? -1 : 1;
    enterAnimation.clampWhenFinished = true;
    enterAnimation.play();
    if (!reversed) {
      firstAnimations.forEach((name) => actions[name]?.reset().play());
      actions["Armature.001Action"]?.reset().play();
    }
  };

  useLayoutEffect(() => {
    enterAnimation = actions["ActionEnter"];
    resetAllActions();

    ScrollTrigger.create({
      id: sectionID,
      trigger: "#section4",
      start: "top bottom",
      end: "#section5 bottom",
      scrub: true,
      markers: false,
      onEnter: () => {
        setCurrentModel(sectionID);
        disableOtherSections();
        resetAllActions();
        playIntroAnimations();
      },
      onEnterBack: () => {
        setCurrentModel(sectionID);
        disableOtherSections();
        resetAllActions();
        playIntroAnimations(true);
      },
      onLeaveBack: () => {
        playIntroAnimations(true);

        setTimeout(() => {
          prevScrollTrigger.enable();
        }, enterAnimation.getClip().duration * 1000);
      },
    });

    ScrollTrigger.create({
      id: sectionID + "_secondary",
      trigger: "#section5",
      start: "top bottom",
      end: "bottom top",
      scrub: 2.5,
      markers: true,
      onEnter: () => {
        setCurrentModel(sectionID);
        disableOtherSections();

        const action = actions["1.2ndScroll"];
        if (action) {
          console.log("ðŸš€ ~ useLayoutEffect ~ 2ndScroll:", action)
          action.reset();
          action.setLoop(THREE.LoopOnce, 1);
          action.clampWhenFinished = true;
          action.time = action.getClip().duration - 0.1;
         action.timeScale = 1;
          action.enabled = true;
          action.setEffectiveWeight(1);
          action.paused = false;
          action.play();
          setTimeout(() => {
          console.log("ðŸš€ ~ setTimeout ~ setTimeout:")
          }, (action.getClip().duration - 0.1)*1000);
        }

        scrollAnimations.forEach((name) => {
          const anim = actions[name];
          if (anim) {
            anim.reset();
            anim.timeScale = 1;
            anim.setLoop(THREE.LoopOnce, 1);
            anim.clampWhenFinished = true;
            anim.play();
          }
        });
        console.log("ManRef.current.scale", ManRef.current.scale.toArray());
        gsap.to(ManRef.current.scale, {
          x: 0,
          y: 0,
          z: 0,
          duration: 0.5,
          ease: "power2.out",
        });

        const mainScroll = actions[scrollAnimations[6]];
        if (mainScroll) {
          mainScroll.getMixer().addEventListener("finished", () => {
            playedSecondScroll.current = true;
          });
        }
      },

      onLeaveBack: () => {
        console.log("ðŸš€ ~ useLayoutEffect ~ onLeaveBack:");
        gsap.to(ManRef.current.scale, {
          x: 0.029,
          y: 0.029,
          z: 0.029,
          duration: 0.5,
          ease: "power2.out",
        });
        scrollAnimations.forEach((name) => {
          const anim = actions[name];
          if (anim) {
            anim.reset();
            anim.setLoop(THREE.LoopOnce, 1);
            anim.clampWhenFinished = true;
            anim.time = 0.3;
            anim.timeScale = -1; // Inverse l'animation

            anim.play();
          }
        });
        const action = actions["1.2ndScroll"];
        if (action) {
          action.reset();
          action.setLoop(THREE.LoopOnce, 1);
          action.clampWhenFinished = true;

          action.time = action.getClip().duration;

          action.timeScale = -1;

          action.enabled = true;
          action.setEffectiveWeight(1);
          action.paused = false;
          action.play();
        }
      },
      onUpdate: (self) => {
        const progress = self.progress;
        secondScrollAnimations.forEach((name) => {
          const action = actions[name];
          if (action) {
            const duration = action.getClip().duration;
            action.paused = true;
            action.time = duration * progress;
            action.getMixer().update(0);
            action.play();
          }
        });
      },
    });

    return () => {
      mixer.stopAllAction();
    };
  }, []);

  return (
    <group ref={group} {...props} dispose={null} visible={isActive}>
      <group name="Scene">
        <mesh
          name="Cylinder011"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder011.geometry}
          material={materials["Material.022"]}
          position={[-0.208, 0.174, 0.184]}
          rotation={[Math.PI, -0.93, Math.PI]}
          scale={0.01}
        />
        <mesh
          name="Cylinder010"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder010.geometry}
          material={materials["Material.022"]}
          position={[0.027, 0.166, -0.217]}
          rotation={[-0.236, -1.235, -0.241]}
          scale={0.01}
        />
        <mesh
          name="Cylinder012"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder012.geometry}
          material={materials["Material.022"]}
          position={[0.243, 0.164, -0.112]}
          rotation={[-3.046, -0.631, -3.103]}
          scale={0.008}
        />
        <group
          name="BÃ©zierCurve"
          position={[0.003, -0.116, -0.002]}
          rotation={[Math.PI / 2, -Math.PI / 2, 0]}
        />
        <mesh
          name="Cylinder101"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder101.geometry}
          material={materials["Material.002"]}
          position={[0.072, 0.323, -0.067]}
          rotation={[0.259, -0.477, 0.113]}
          scale={[0.006, 0.111, 0.004]}
        >
          <mesh
            name="Cube031"
            castShadow
            receiveShadow
            geometry={nodes.Cube031.geometry}
            material={materials["Material.002"]}
            position={[-5.591, -0.78, -0.016]}
            rotation={[-Math.PI, 0, -1.571]}
            scale={[0.012, 5.527, 0.828]}
          />
        </mesh>
        <mesh
          name="GroundCubeQuad003"
          castShadow
          receiveShadow
          geometry={nodes.GroundCubeQuad003.geometry}
          material={materials.Ground_FileSize_Mat}
          position={[0.003, -0.549, -0.002]}
          scale={[1.022, 1, 1.022]}
        />
        <mesh
          name="Cube066"
          castShadow
          receiveShadow
          geometry={nodes.Cube066.geometry}
          material={materials.Material}
          position={[-0.365, 0.269, 0.296]}
          rotation={[0, -0.432, 0]}
          scale={[0.01, 0.036, 0.01]}
        >
          <mesh
            name="Cube060"
            castShadow
            receiveShadow
            geometry={nodes.Cube060.geometry}
            material={materials.Material}
            position={[4.865, 18.97, -5.005]}
            rotation={[0, -1.546, 0]}
            scale={[23.068, 8.486, 35.574]}
          >
            <group
              name="Cube059"
              position={[-1.286, -0.311, 0]}
              rotation={[0, 1.571, 0]}
              scale={[0.214, 0.068, 0.204]}
            >
              <mesh
                name="Cube053"
                castShadow
                receiveShadow
                geometry={nodes.Cube053.geometry}
                material={materials["Material.015"]}
              />
              <mesh
                name="Cube053_1"
                castShadow
                receiveShadow
                geometry={nodes.Cube053_1.geometry}
                material={materials["Material.015"]}
              />
            </group>
            <mesh
              name="Cube061"
              castShadow
              receiveShadow
              geometry={nodes.Cube061.geometry}
              material={materials["Material.009"]}
              position={[1.151, -0.346, 0]}
              rotation={[0, 1.571, 0]}
              scale={[0.1, 0.235, 0.329]}
            />
            <mesh
              name="Cylinder127"
              castShadow
              receiveShadow
              geometry={nodes.Cylinder127.geometry}
              material={materials.Material}
              position={[-0.719, -0.037, 0]}
              rotation={[0, 1.571, 0]}
              scale={[3.227, 3.227, 4.977]}
            />
            <group
              name="Cylinder129"
              position={[-1.265, -0.435, -0.003]}
              rotation={[0, 1.571, 0]}
              scale={[0.015, 0.231, 0.023]}
            >
              <mesh
                name="Cylinder129_1"
                castShadow
                receiveShadow
                geometry={nodes.Cylinder129_1.geometry}
                material={materials["Material.009"]}
              />
              <mesh
                name="Cylinder129_2"
                castShadow
                receiveShadow
                geometry={nodes.Cylinder129_2.geometry}
                material={materials.Material}
              />
              <group
                name="Torus001"
                position={[-0.201, -1.717, 0.626]}
                rotation={[Math.PI / 2, 0, -0.83]}
                scale={[1.979, 1.979, 0.146]}
              >
                <mesh
                  name="Torus001_1"
                  castShadow
                  receiveShadow
                  geometry={nodes.Torus001_1.geometry}
                  material={materials.Material}
                />
                <mesh
                  name="Torus001_2"
                  castShadow
                  receiveShadow
                  geometry={nodes.Torus001_2.geometry}
                  material={materials["Material.007"]}
                />
                <mesh
                  name="Torus001_3"
                  castShadow
                  receiveShadow
                  geometry={nodes.Torus001_3.geometry}
                  material={materials["Material.008"]}
                />
                <mesh
                  name="Torus001_4"
                  castShadow
                  receiveShadow
                  geometry={nodes.Torus001_4.geometry}
                  material={materials["Material.009"]}
                />
              </group>
            </group>
          </mesh>
          <mesh
            name="Cylinder121"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder121.geometry}
            material={materials.Material}
            position={[4.906, 15.504, -4.974]}
            scale={[6.219, 0.307, 6.219]}
          />
        </mesh>
        <mesh
          name="Sphere001"
          castShadow
          receiveShadow
          geometry={nodes.Sphere001.geometry}
          material={materials["Material.001"]}
          position={[-0.203, 0.408, -0.21]}
          scale={0}
        />
        <mesh
          name="Cube"
          castShadow
          receiveShadow
          geometry={nodes.Cube.geometry}
          material={materials["Material.001"]}
          position={[0.006, 0.859, 0.222]}
          scale={0}
        />
        <mesh
          name="Cylinder090"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder090.geometry}
          material={materials.Ground1}
          position={[0.003, 0.188, -0.002]}
        />
        <mesh
          name="Cube024"
          castShadow
          receiveShadow
          geometry={nodes.Cube024.geometry}
          material={materials.Ground2}
          position={[0.003, -0.027, -0.002]}
        />
        <mesh
          name="Retopo_Icosphere016"
          castShadow
          receiveShadow
          geometry={nodes.Retopo_Icosphere016.geometry}
          material={nodes.Retopo_Icosphere016.material}
          position={[-0.843, 1.275, -5.535]}
          scale={0.079}
        />
        <group name="Empty" position={[4.089, 2.103, -0.346]}>
          <PerspectiveCamera
            name="Camera"
            makeDefault={isActive}
            far={1000}
            near={0.1}
            fov={19.157}
            rotation={[-Math.PI / 2, 1.519, Math.PI / 2]}
            scale={0.217}
          />
        </group>
        <group
          name="Cylinder095"
          position={[0.004, 0.391, 0.002]}
          rotation={[-0.004, 0.02, -0.002]}
          scale={0.052}
        >
          <mesh
            name="Cylinder101_1"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder101_1.geometry}
            material={materials["Material.007"]}
          />
          <mesh
            name="Cylinder101_2"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder101_2.geometry}
            material={materials["Material.008"]}
          />
          <mesh
            name="Cylinder101_3"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder101_3.geometry}
            material={materials["Material.017"]}
          />
          <mesh
            name="Cylinder101_4"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder101_4.geometry}
            material={materials["Material.015"]}
          />
          <group name="Cylinder001" position={[0.006, 3.553, 0.007]} scale={0}>
            <mesh
              name="Cylinder001_1"
              castShadow
              receiveShadow
              geometry={nodes.Cylinder001_1.geometry}
              material={materials["Material.007"]}
            />
            <mesh
              name="Cylinder001_2"
              castShadow
              receiveShadow
              geometry={nodes.Cylinder001_2.geometry}
              material={materials["Material.008"]}
            />
          </group>
          <group
            name="Cylinder096"
            position={[-0.008, -1.548, -1.192]}
            rotation={[0, 1.571, 0]}
            scale={0.489}
          >
            <mesh
              name="Cylinder102_1"
              castShadow
              receiveShadow
              geometry={nodes.Cylinder102_1.geometry}
              material={materials["Material.007"]}
            />
            <mesh
              name="Cylinder102_2"
              castShadow
              receiveShadow
              geometry={nodes.Cylinder102_2.geometry}
              material={materials["Material.008"]}
            />
            <mesh
              name="Cylinder102_3"
              castShadow
              receiveShadow
              geometry={nodes.Cylinder102_3.geometry}
              material={materials["Material.009"]}
            />
          </group>
          <group
            name="Cylinder097"
            position={[1.256, -1.548, 0.055]}
            scale={0.489}
          >
            <mesh
              name="Cylinder103_1"
              castShadow
              receiveShadow
              geometry={nodes.Cylinder103_1.geometry}
              material={materials["Material.007"]}
            />
            <mesh
              name="Cylinder103_2"
              castShadow
              receiveShadow
              geometry={nodes.Cylinder103_2.geometry}
              material={materials["Material.008"]}
            />
            <mesh
              name="Cylinder103_3"
              castShadow
              receiveShadow
              geometry={nodes.Cylinder103_3.geometry}
              material={materials["Material.009"]}
            />
          </group>
          <group
            name="Cylinder098"
            position={[1.103, 0.633, 0.065]}
            rotation={[0, 0, -1.445]}
            scale={[0.491, 0.093, 0.491]}
          >
            <mesh
              name="Cylinder104_1"
              castShadow
              receiveShadow
              geometry={nodes.Cylinder104_1.geometry}
              material={materials["Material.009"]}
            />
            <mesh
              name="Cylinder104_2"
              castShadow
              receiveShadow
              geometry={nodes.Cylinder104_2.geometry}
              material={materials["Material.013"]}
            />
          </group>
          <mesh
            name="Cylinder099"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder099.geometry}
            material={materials["Material.009"]}
            position={[0, -3.265, -0.769]}
            rotation={[0.137, 0, 0]}
            scale={0.146}
          />
          <mesh
            name="Cylinder100"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder100.geometry}
            material={materials["Material.009"]}
            position={[-0.779, -3.265, 0]}
            rotation={[Math.PI / 2, 1.434, -Math.PI / 2]}
            scale={0.146}
          />
          <mesh
            name="Cylinder102"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder102.geometry}
            material={materials["Material.017"]}
            position={[0.424, 2.008, -0.803]}
            rotation={[2.137, 0.803, 0.456]}
          />
          <mesh
            name="Cylinder103"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder103.geometry}
            material={materials["Material.009"]}
            position={[0.015, 1.658, -0.346]}
            scale={[0.125, 1.435, 0.125]}
          />
          <mesh
            name="Cylinder104"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder104.geometry}
            material={materials["Material.009"]}
            position={[-0.214, 1.29, -0.777]}
            rotation={[0.147, 0.055, -0.018]}
            scale={[0.096, 0.761, 0.096]}
          />
          <mesh
            name="Cylinder106"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder106.geometry}
            material={materials["Material.009"]}
            position={[-0.111, 0.999, 0.235]}
            scale={[0.125, 1.435, 0.125]}
          />
        </group>
        <group name="Cylinder019" position={[0.005, 0.3, 0.387]} scale={0}>
          <mesh
            name="Cylinder007"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder007.geometry}
            material={materials["Material.003"]}
          />
          <mesh
            name="Cylinder007_1"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder007_1.geometry}
            material={materials["Material.005"]}
          />
          <mesh
            name="Cylinder007_2"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder007_2.geometry}
            material={materials["Material.006"]}
          />
          <mesh
            name="Cylinder007_3"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder007_3.geometry}
            material={materials["Material.010"]}
          />
          <mesh
            name="Cylinder007_4"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder007_4.geometry}
            material={materials["Material.011"]}
          />
          <mesh
            name="Cylinder007_5"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder007_5.geometry}
            material={materials["Material.012"]}
          />
        </group>
        <group
          name="Armature002"
          position={[2.919, -1.205, -0.53]}
          rotation={[0, 1.107, 0]}
          scale={0.064}
        >
          <group name="Retopo_Sphere002">
            <skinnedMesh
              name="mesh003"
              geometry={nodes.mesh003.geometry}
              material={materials["Material.004"]}
              skeleton={nodes.mesh003.skeleton}
            />
            <skinnedMesh
              name="mesh003_1"
              geometry={nodes.mesh003_1.geometry}
              material={materials["pants.001"]}
              skeleton={nodes.mesh003_1.skeleton}
            />
            <skinnedMesh
              name="mesh003_2"
              geometry={nodes.mesh003_2.geometry}
              material={materials["skin.001"]}
              skeleton={nodes.mesh003_2.skeleton}
            />
            <group
              name="Empty001"
              position={[0.606, -0.576, 0.21]}
              scale={1.043}
            />
            <group
              name="Empty002"
              position={[-0.555, -0.686, 0.037]}
              scale={0.834}
            />
          </group>
          <primitive object={nodes.Bone} />
          <primitive object={nodes.Bone007} />
          <primitive object={nodes.Bone008} />
        </group>
        <group
          name="Armature001"
          position={[0.052, 0.421, -0.086]}
          rotation={[0, -0.516, 0]}
          scale={0.029}
          ref={ManRef}
        >
          <group name="Retopo_Sphere001">
            <skinnedMesh
              name="mesh001"
              geometry={nodes.mesh001.geometry}
              material={materials["Material.016"]}
              skeleton={nodes.mesh001.skeleton}
            />
            <skinnedMesh
              name="mesh001_1"
              geometry={nodes.mesh001_1.geometry}
              material={materials.pants}
              skeleton={nodes.mesh001_1.skeleton}
            />
            <skinnedMesh
              name="mesh001_2"
              geometry={nodes.mesh001_2.geometry}
              material={materials.skin}
              skeleton={nodes.mesh001_2.skeleton}
            />
            <group
              name="Empty005"
              position={[0.392, 1.453, 1.578]}
              scale={1.043}
            />
            <group
              name="Empty006"
              position={[-0.616, 0.807, 1.625]}
              scale={0.834}
            />
          </group>
          <primitive object={nodes.Bone_1} />
          <primitive object={nodes.Bone007_1} />
          <primitive object={nodes.Bone008_1} />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("./models/Web2.glb");
